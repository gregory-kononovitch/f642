# Makefile (from libebml Makefile)
# The library is built without debug information. If you want
# debug information to be included then compile with
# 'make DEBUG=yes'.
#

prefix=/usr/local
libdir=$(prefix)/lib
includedir=$(prefix)/include

# Programs
INSTALL = install
INSTALL_OPTS = -m 644
INSTALL_OPTS_LIB = -m 644
INSTALL_DIR_OPTS = -m 755

# Options
EXTENSION=.c
ASM_EXTENSION=.asm

ifeq (yes,$(DEBUG))
DEBUGFLAGS=-g -DDEBUG
endif

CWD=$(shell pwd)

SRC_DIR=$(CWD)/
ASM_DIR=$(CWD)/asm/
INCLUDE_DIR=$(CWD)/

# Librarires
INCLUDE=
LIBS=

# Names
EXEC=f650-test.xo
LIBRARY=libf650.a
LIBRARY_SO=libf650.so
LIBRARY_SO_VER=libf650.so.0.1

# source-files
sources:=$(wildcard ${SRC_DIR}*$(EXTENSION))
sources_asm:=$(wildcard ${ASM_DIR}*$(ASM_EXTENSION))

# header files; replace .c extension with .h
headers:=$(patsubst %$(EXTENSION),%.h,$(sources))

# object files; replace .c extension with .o
objects:=$(patsubst %$(EXTENSION),%.o,$(sources))
objects_ao:=$(patsubst %.asm,%.ao,$(sources_asm))
objects_so:=$(patsubst %$(EXTENSION),%.lo,$(sources))

WARNINGFLAGS=-Wall
# -Wextra -Wno-unknown-pragmas -ansi -Wshadow
COMPILEFLAGS=$(WARNINGFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(DEBUGFLAGS) $(INCLUDE)
DEPENDFLAGS  = $(CXXFLAGS) $(INCLUDE)


all: $(EXEC)

staticlib: $(LIBRARY)

sharedlib: $(LIBRARY_SO)

lib:
	@echo "Use the 'staticlib', 'sharedlib' or 'all' targets."
	@false

# Build rules
%.ao: %.asm
	yasm -f elf64 -a x86 -m amd64 -o $@ $<

%.o: %$(EXTENSION)
	gcc -c $(COMPILEFLAGS) $(INCLUDE) -o $@ $<

%.lo: %$(EXTENSION)
	gcc -c $(COMPILEFLAGS) $(INCLUDE) -fPIC -o $@ $<

$(EXEC): $(objects) asm/graphics.asm
#	@echo "ASM ${ASM_DIR} : $(objects_ao)"
	yasm -f elf64 -a x86 -m amd64 -o asm/graphics.ao asm/graphics.asm
	gcc -o $(EXEC) $(objects) $(objects_ao) $(LIBS)
	
$(LIBRARY): $(objects)
	ar rcvu $@ $(objects)
	ranlib $@

$(LIBRARY_SO): $(objects_so)
	gcc -shared -Wl,-soname,$(LIBRARY_SO_VER) -o $(LIBRARY_SO_VER) $(objects_so)
	rm -f $(LIBRARY_SO)
	ln -s $(LIBRARY_SO_VER) $(LIBRARY_SO)

clean:
	rm -f $(objects) $(objects_ao) $(objects_so)
	rm -f $(LIBRARY)
	rm -f $(LIBRARY_SO)
	rm -f $(LIBRARY_SO_VER)
	rm -f CORE

distclean dist-clean: clean
	rm -f .depend

install: install_staticlib install_sharedlib install_headers

install_headers:
	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(includedir)
	for i in $(INCLUDE_DIR)/*.h; do \
		$(INSTALL) $(INSTALL_OPTS) $$i $(includedir) ; \
	done
	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(includedir)/c
	for i in $(INCLUDE_DIR)/c/*.h; do \
		$(INSTALL) $(INSTALL_OPTS) $$i $(includedir)/c ; \
	done

install_staticlib: $(LIBRARY)
	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(libdir)
	$(INSTALL) $(INSTALL_OPTS_LIB) $(LIBRARY) $(libdir)

install_sharedlib: $(LIBRARY_SO)
	$(INSTALL) $(INSTALL_DIR_OPTS) -d $(libdir)
	$(INSTALL) $(INSTALL_OPTS_LIB) $(LIBRARY_SO_VER) $(libdir)
	ln -fs $(LIBRARY_SO_VER) $(libdir)/$(LIBRARY_SO)


ifneq ($(wildcard .depend),)
include .depend
endif

# DO NOT DELETE

